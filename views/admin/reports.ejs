<%- include('../layouts/adminheader') %>   

<script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.3/html2pdf.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.3/xlsx.full.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

<div class="container-fluid px-4" id="report-container">
    <h1 class="mt-4">Royal Oak Sales Report</h1>
    <% if (startDate && endDate) { %>
        <div class="alert alert-info">
            Report Period: <%= startDate %> to <%= endDate %>
        </div>
    <% } %>

    <!-- Summary Cards -->
    <div class="row mt-4">
        <div class="col-xl-3 col-md-6">
            <div class="card bg-primary text-white mb-4">
                <div class="card-body">
                    <h4 class="mb-0">₹<%= metrics.totalAmount.toFixed(2) %></h4>
                    <div class="small">Total Revenue</div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-success text-white mb-4">
                <div class="card-body">
                    <h4 class="mb-0"><%= metrics.totalOrders %></h4>
                    <div class="small">Total Orders</div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-warning text-white mb-4">
                <div class="card-body">
                    <h4 class="mb-0">₹<%= metrics.avgOrderValue.toFixed(2) %></h4>
                    <div class="small">Average Order Value</div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-info text-white mb-4">
                <div class="card-body">
                    <h4 class="mb-0">₹<%= metrics.totalCouponAmount.toFixed(2) %></h4>
                    <div class="small">Total Discounts</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Section -->
    <div class="row mb-4">
        <div class="col-xl-6">
            <div class="card">
                <div class="card-header">
                    <i class="fas fa-chart-bar me-1"></i>
                    Payment Methods Distribution
                </div>
                <div class="card-body">
                    <canvas id="paymentMethodChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-xl-6">
            <div class="card">
                <div class="card-header">
                    <i class="fas fa-chart-pie me-1"></i>
                    Order Status Distribution
                </div>
                <div class="card-body">
                    <canvas id="orderStatusChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Detailed Report Table -->
    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-table me-1"></i>
            Detailed Sales Report
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table id="myTable" class="table table-bordered table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>Order ID</th>
                            <th>Date</th>
                            <th>Customer</th>
                            <th>Items</th>
                            <th>Payment Method</th>
                            <th>Status</th>
                            <th>Discount</th>
                            <th>Total Amount</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% report.forEach((order) => { %>
                            <tr>
                                <td><%= order._id %></td>
                                <td><%= new Date(order.orderDate).toLocaleDateString() %></td>
                                <td><%= order.deliveryAddress.fullName %></td>
                                <td>
                                    <%= order.items.reduce((sum, item) => sum + item.quantity, 0) %>
                                    items
                                </td>
                                <td><%= order.paymentMethod %></td>
                                <td>
                                    <span class="badge bg-<%= getStatusColor(order.orderStatus) %>">
                                        <%= order.orderStatus %>
                                    </span>
                                </td>
                                <td>₹<%= order.couponApplied ? getCouponAmount(order) : '0.00' %></td>
                                <td>₹<%= order.totalAmount.toFixed(2) %></td>
                            </tr>
                        <% }); %>
                    </tbody>
                    <tfoot class="table-dark">
                        <tr>
                            <td colspan="6"><strong>Totals</strong></td>
                            <td>₹<%= metrics.totalCouponAmount.toFixed(2) %></td>
                            <td>₹<%= metrics.totalAmount.toFixed(2) %></td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>

    <!-- Export Buttons -->
    <div class="text-center mb-4">
        <button id="download-pdf" class="btn btn-success me-2">
            <i class="fas fa-file-pdf me-1"></i> Download as PDF
        </button>
        <button id="download-excel" class="btn btn-success">
            <i class="fas fa-file-excel me-1"></i> Download as Excel
        </button>
    </div>
</div>

<script>
// Chart Initialization
document.addEventListener('DOMContentLoaded', function() {
    // Payment Methods Chart
    const paymentMethodCtx = document.getElementById('paymentMethodChart');
    if (paymentMethodCtx) {
        new Chart(paymentMethodCtx, {
            type: 'bar',
            data: {
                labels: <%- JSON.stringify(paymentMethodLabels || []) %>,
                datasets: [{
                    label: 'Number of Orders',
                    data: <%- JSON.stringify(paymentMethodData || []) %>,
                    backgroundColor: 'rgba(54, 162, 235, 0.5)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            stepSize: 1
                        }
                    }
                }
            }
        });
    }

    // Order Status Chart
    const orderStatusCtx = document.getElementById('orderStatusChart');
    if (orderStatusCtx) {
        new Chart(orderStatusCtx, {
            type: 'pie',
            data: {
                labels: <%- JSON.stringify(orderStatusLabels || []) %>,
                datasets: [{
                    data: <%- JSON.stringify(orderStatusData || []) %>,
                    backgroundColor: [
                        'rgba(75, 192, 192, 0.5)',
                        'rgba(255, 99, 132, 0.5)',
                        'rgba(255, 206, 86, 0.5)',
                        'rgba(153, 102, 255, 0.5)',
                        'rgba(255, 159, 64, 0.5)'
                    ],
                    borderColor: [
                        'rgba(75, 192, 192, 1)',
                        'rgba(255, 99, 132, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true
            }
        });
    }
});

// PDF Export Function
document.getElementById('download-pdf').addEventListener('click', function() {
    // Get the report container
    const element = document.querySelector('#report-container');
    
    // Create a clone of the element to modify for PDF
    const clonedElement = element.cloneNode(true);
    
    // Remove the export buttons from the PDF
    const exportButtons = clonedElement.querySelector('.text-center');
    if (exportButtons) {
        exportButtons.remove();
    }

    // Configure PDF options
    const opt = {
        margin: [0.5, 0.5],
        filename: `royal_oak_sales_report_${new Date().toISOString().split('T')[0]}.pdf`,
        image: { type: 'jpeg', quality: 1 },
        html2canvas: { 
            scale: 2,
            logging: false,
            useCORS: true,
            letterRendering: true
        },
        jsPDF: { 
            unit: 'in', 
            format: 'a4', 
            orientation: 'landscape',
            compress: true
        }
    };

    // Show loading indicator
    const loadingDiv = document.createElement('div');
    loadingDiv.innerHTML = '<div class="alert alert-info">Generating PDF, please wait...</div>';
    element.prepend(loadingDiv);

    // Generate and download PDF
    html2pdf()
        .from(clonedElement)
        .set(opt)
        .save()
        .then(() => {
            loadingDiv.remove();
            // Show success message
            const successAlert = document.createElement('div');
            successAlert.className = 'alert alert-success';
            successAlert.innerHTML = 'PDF downloaded successfully!';
            element.prepend(successAlert);
            setTimeout(() => successAlert.remove(), 3000);
        })
        .catch(error => {
            console.error('PDF generation failed:', error);
            loadingDiv.innerHTML = '<div class="alert alert-danger">PDF generation failed. Please try again.</div>';
            setTimeout(() => loadingDiv.remove(), 3000);
        });
});

// Excel Export Function
document.getElementById('download-excel').addEventListener('click', function() {
    try {
        // Get the table element
        const table = document.getElementById('myTable');
        
        // Create a new workbook
        const wb = XLSX.utils.book_new();
        
        // Convert table to worksheet
        const ws = XLSX.utils.table_to_sheet(table, {
            raw: true,
            dateNF: 'dd/mm/yyyy'
        });
        
        // Set column widths
        const colWidths = [
            { wch: 15 }, // Order ID
            { wch: 12 }, // Date
            { wch: 20 }, // Customer
            { wch: 10 }, // Items
            { wch: 15 }, // Payment Method
            { wch: 12 }, // Status
            { wch: 12 }, // Discount
            { wch: 15 }  // Total Amount
        ];
        ws['!cols'] = colWidths;

        // Add the worksheet to the workbook
        XLSX.utils.book_append_sheet(wb, ws, 'Sales Report');

        // Generate filename with current date
        const filename = `royal_oak_sales_report_${new Date().toISOString().split('T')[0]}.xlsx`;

        // Save the file
        XLSX.writeFile(wb, filename);

        // Show success message
        const successAlert = document.createElement('div');
        successAlert.className = 'alert alert-success mt-3';
        successAlert.innerHTML = 'Excel file downloaded successfully!';
        document.querySelector('.text-center').appendChild(successAlert);
        setTimeout(() => successAlert.remove(), 3000);

    } catch (error) {
        console.error('Excel generation failed:', error);
        const errorAlert = document.createElement('div');
        errorAlert.className = 'alert alert-danger mt-3';
        errorAlert.innerHTML = 'Excel generation failed. Please try again.';
        document.querySelector('.text-center').appendChild(errorAlert);
        setTimeout(() => errorAlert.remove(), 3000);
    }
});
</script>

<style>
.table th, .table td {
    vertical-align: middle;
}
.badge {
    font-size: 0.9em;
    padding: 0.5em 0.75em;
}
.card {
    box-shadow: 0 0.15rem 1.75rem 0 rgba(33, 40, 50, 0.15);
}
.alert {
    position: relative;
    padding: 0.75rem 1.25rem;
    margin-bottom: 1rem;
    border: 1px solid transparent;
    border-radius: 0.25rem;
}
.alert-info {
    color: #0c5460;
    background-color: #d1ecf1;
    border-color: #bee5eb;
}
.alert-success {
    color: #155724;
    background-color: #d4edda;
    border-color: #c3e6cb;
}
.alert-danger {
    color: #721c24;
    background-color: #f8d7da;
    border-color: #f5c6cb;
}
#report-container {
    padding-bottom: 2rem;
}
</style>

<%- include('../layouts/adminfooter') %>