<%- include('../user/layout/userHeader') %>
<head>
    <!-- SweetAlert2 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.0/dist/sweetalert2.min.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
</head>
<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
        background: #f9f9f9;
        min-height: 100vh;
        line-height: 1.6;
    }

    .wishlist-section {
        padding: 2rem 5%;
        max-width: 1100px;
        margin: 0 auto;
    }

    .section-header {
        margin-bottom: 2rem;
        text-align: center;
        position: relative;
    }

    .section-header::before {
        content: '';
        position: absolute;
        top: -15px;
        left: 50%;
        transform: translateX(-50%);
        width: 50px;
        height: 3px;
        background: linear-gradient(90deg, #f97316, #fb923c);
        border-radius: 2px;
    }

    .section-header p {
        display: inline-block;
        background: linear-gradient(135deg, #f97316, #ea580c);
        color: white;
        padding: 0.3rem 0.8rem;
        border-radius: 15px;
        font-size: 0.75rem;
        font-weight: 600;
        text-transform: uppercase;
        margin-bottom: 0.4rem;
        box-shadow: 0 2px 6px rgba(249, 115, 22, 0.3);
    }

    .section-header h1 {
        font-size: clamp(1.6rem, 4vw, 2.2rem);
        font-weight: 700;
        color: #1f2937;
    }

    .wishlist-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(180px, 180px));
        gap: 0.6rem;
        justify-content: center;
    }

    .wishlist-card {
        background: #ffffff;
        border-radius: 6px;
        padding: 0.6rem;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08);
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
        border: 1px solid #f1f5f9;
        display: flex;
        flex-direction: column;
        min-height: 300px;
        max-width: 180px;
        width: 100%;
    }

    .wishlist-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 3px 10px rgba(0, 0, 0, 0.12);
    }

    .wishlist-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 2px;
        background: linear-gradient(90deg, #f97316, #ea580c, #c2410c);
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .wishlist-card:hover::before {
        opacity: 1;
    }

    .wishlist-image-container {
        position: relative;
        background: #ffffff;
        border-radius: 5px;
        padding: 0.6rem;
        margin-bottom: 0.6rem;
        overflow: hidden;
        padding-top: 75%; /* 4:3 aspect ratio */
    }

    .wishlist-image {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: contain;
        transition: transform 0.3s ease;
    }

    .wishlist-card:hover .wishlist-image {
        transform: scale(1.03);
    }

    .wishlist-info {
        padding: 0.6rem;
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

    .wishlist-title {
        font-size: 0.85rem;
        font-weight: 600;
        color: #1a1a1a;
        margin: 0;
        line-height: 1.2;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-decoration: none;
    }

    .wishlist-card:hover .wishlist-title {
        color: #f97316;
    }

    .price-container {
        display: flex;
        align-items: center;
        gap: 0.25rem;
        flex-wrap: wrap;
    }

    .currency {
        font-size: 0.85rem;
        font-weight: 600;
        color: #1f2937;
    }

    .current-price {
        font-size: 1rem;
        font-weight: 700;
        color: #1f2937;
    }

    .original-price {
        font-size: 0.7rem;
        color: #6b7280;
        text-decoration: line-through;
    }

    .rating-container {
        display: flex;
        align-items: center;
        gap: 0.3rem;
    }

    .stars {
        position: relative;
        display: inline-block;
        width: 70px;
        height: 14px;
        background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23e2e8f0' viewBox='0 0 24 24'%3E%3Cpath d='M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z'/%3E%3C/svg%3E") repeat-x;
        background-size: 14px 14px;
    }

    .stars-filled {
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23f59e0b' viewBox='0 0 24 24'%3E%3Cpath d='M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z'/%3E%3C/svg%3E") repeat-x;
        background-size: 14px 14px;
        transition: width 0.3s ease;
    }

    .rating-count {
        font-size: 0.7rem;
        color: #6b7280;
        font-weight: 500;
    }

    .wishlist-actions {
        padding: 0.6rem;
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 0.4rem;
        border-top: 1px solid #f1f5f9;
    }

    .remove-button,
    .add-to-cart-button {
        padding: 0.5rem;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 0.75rem;
        font-weight: 600;
        transition: all 0.3s ease;
        white-space: nowrap;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
    }

    .remove-button {
        background: linear-gradient(135deg, #dc2626, #b91c1c);
        color: white;
    }

    .remove-button:hover {
        background: linear-gradient(135deg, #ef4444, #dc2626);
        transform: translateY(-1px);
        box-shadow: 0 3px 10px rgba(220, 38, 38, 0.4);
    }

    .add-to-cart-button {
        background: linear-gradient(135deg, #f97316, #ea580c);
        color: white;
    }

    .add-to-cart-button:hover {
        background: linear-gradient(135deg, #fb923c, #f97316);
        transform: translateY(-1px);
        box-shadow: 0 3px 10px rgba(249, 115, 22, 0.4);
    }

    .add-to-cart-button.clicked {
        background: #22c55e;
        cursor: not-allowed;
        box-shadow: none;
    }

    footer {
        background: #1f2937;
        color: #e5e7eb;
        padding: 2rem 5%;
        margin-top: 3rem;
        position: relative;
    }

    footer h3 {
        font-size: 1.1rem;
        margin-bottom: 0.8rem;
        color: #f97316;
        font-weight: 700;
    }

    footer p {
        color: #9ca3af;
        font-size: 0.85rem;
        margin-bottom: 0.6rem;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
        .wishlist-section {
            padding: 1.5rem 3%;
        }

        .wishlist-grid {
            grid-template-columns: repeat(auto-fit, minmax(160px, 160px));
            gap: 0.8rem;
        }

        .wishlist-card {
            min-height: 280px;
            max-width: 160px;
        }

        .wishlist-actions {
            grid-template-columns: 1fr;
            gap: 0.6rem;
        }
    }

    @media (max-width: 480px) {
        .wishlist-grid {
            grid-template-columns: 1fr;
            justify-content: center;
        }

        .wishlist-card {
            min-height: 260px;
            max-width: 100%;
        }

        .section-header h1 {
            font-size: 1.4rem;
        }
    }
</style>

<section class="wishlist-section">
    <div class="section-header">
        <p>Your Wishlist</p>
        <h1>Items You Love</h1>
    </div>

    <div class="wishlist-grid">
        <% wishlist.products.forEach(item => { %>
            <div class="wishlist-card">
                <div class="wishlist-image-container">
                    <img src="/Uploads/<%= item.productId.productImage[0] %>" alt="<%= item.productId.productName %>" class="wishlist-image">
                </div>
                <a href="/product/<%= item.productId._id %>" class="wishlist-title"><%= item.productId.productName %></a>
                <div class="wishlist-info">
                    <div class="price-container">
                        <span class="currency">₹</span>
                        <span class="current-price"><%= Math.floor(item.productId.salePrice) %></span>
                        <% if (item.productId.salePrice < item.productId.regularPrice) { %>
                            <span class="original-price">List Price: <span class="strike">₹<%= item.productId.regularPrice %></span></span>
                        <% } %>
                    </div>
                    <div class="rating-container">
                        <div class="stars">
                            <div class="stars-filled" style="width: <%= (item.productId.rating || 4.5) * 20 %>%"></div>
                        </div>
                        <span class="rating-count"><%= item.productId.reviewCount || 88 %></span>
                    </div>
                </div>
                <div class="wishlist-actions">
                    <button class="remove-button" data-product-id="<%= item.productId._id %>">Remove</button>
                    <button 
                        class="add-to-cart-button" 
                        data-product-id="<%= item.productId._id %>" 
                        data-added="false" 
                        aria-live="polite"
                        aria-label="Add <%= item.productId.productName %> to cart">
                        Add to Cart
                    </button>
                </div>
            </div>
        <% }) %>
    </div>
</section>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.0/dist/sweetalert2.all.min.js"></script>

<script>
document.addEventListener("DOMContentLoaded", () => {
    const removeButtons = document.querySelectorAll(".remove-button");
    removeButtons.forEach(button => {
        button.addEventListener("click", async event => {
            const productId = button.getAttribute("data-product-id");

            try {
                const response = await fetch(`/removeFromWishlist/${productId}`, {
                    method: "DELETE",
                    headers: {
                        "Content-Type": "application/json",
                    },
                });

                if (response.ok) {
                    button.closest(".wishlist-card").remove();
                    Swal.fire({
                        icon: 'success',
                        title: 'Product Removed',
                        text: 'The product has been removed from your wishlist.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                } else {
                    const result = await response.json();
                    Swal.fire({
                        icon: 'error',
                        title: 'Failed to Remove',
                        text: result.message || 'An error occurred while removing the product.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                }
            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An unexpected error occurred. Please try again.',
                    showConfirmButton: false,
                    timer: 1500
                });
                console.error("Error:", error);
            }
        });
    });

    const addToCartButtons = document.querySelectorAll(".add-to-cart-button");
    addToCartButtons.forEach(button => {
        button.addEventListener("click", async event => {
            const productId = button.getAttribute("data-product-id");

            if (button.classList.contains("clicked")) {
                Swal.fire({
                    icon: 'info',
                    title: 'Already Added',
                    text: 'This product is already in your cart.',
                    showConfirmButton: false,
                    timer: 1500
                });
                return;
            }

            button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Adding...';
            button.disabled = true;

            try {
                const response = await fetch(`/addToCarts/${productId}`, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ quantity: 1 }),
                });

                const result = await response.json();

                if (response.ok) {
                    button.classList.add("clicked");
                    button.innerHTML = '<i class="fas fa-check"></i> Added';
                    Swal.fire({
                        icon: 'success',
                        title: 'Added to Cart',
                        text: 'The product has been added to your cart.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Failed to Add',
                        text: result.message || 'An error occurred while adding the product to your cart.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    button.innerHTML = 'Add to Cart';
                    button.disabled = false;
                }
            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An unexpected error occurred. Please try again.',
                    showConfirmButton: false,
                    timer: 1500
                });
                button.innerHTML = 'Add to Cart';
                button.disabled = false;
                console.error("Error:", error);
            }
        });
    });
});
</script>

<%- include('../user/layout/userFooter') %>