<%- include('../user/layout/userHeader') %>
<head>
    <!-- SweetAlert2 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.0/dist/sweetalert2.min.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
</head>
<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
        background: #f9f9f9;
        min-height: 100vh;
        line-height: 1.6;
    }

    nav {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem 5%;
        background: #fff;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
        position: sticky;
        top: 0;
        z-index: 1000;
    }

    .logo {
        font-size: 1.6rem;
        font-weight: 700;
        color: #1f2937;
    }

    .nav-links {
        display: flex;
        gap: 1.2rem;
    }

    .nav-links a {
        text-decoration: none;
        color: #4b5563;
        font-weight: 500;
        transition: color 0.3s ease;
    }

    .nav-links a:hover {
        color: #dc2626;
    }

    .nav-icons {
        display: flex;
        gap: 1rem;
        align-items: center;
    }

    .search-bar {
        padding: 0.5rem 1rem;
        border-radius: 20px;
        border: 1px solid #e5e7eb;
        background: #f3f4f6;
        width: 180px;
        outline: none;
        transition: width 0.3s ease, border-color 0.3s ease;
    }

    .search-bar:focus {
        width: 250px;
        border-color:  #dc2626;
    }

    .products-section {
        padding: 2rem 5%;
        max-width: 1100px;
        margin: 0 auto;
    }

    .section-header {
        margin-bottom: 2rem;
        text-align: center;
        position: relative;
    }

    .section-header::before {
        content: '';
        position: absolute;
        top: -15px;
        left: 50%;
        transform: translateX(-50%);
        width: 50px;
        height: 3px;
        background: linear-gradient(135deg, #dc2626 0%, #991b1b 100%);
        border-radius: 2px;
    }

    .section-header p {
        display: inline-block;
        background: linear-gradient(135deg, #dc2626 0%, #991b1b 100%);
        color: white;
        padding: 0.3rem 0.8rem;
        border-radius: 15px;
        font-size: 0.75rem;
        font-weight: 600;
        text-transform: uppercase;
        margin-bottom: 0.4rem;
        box-shadow: 0 2px 6px rgba(249, 115, 22, 0.3);
    }

    .section-header h1 {
        font-size: clamp(1.6rem, 4vw, 2.2rem);
        font-weight: 700;
        color: #1f2937;
    }

    .sort-options {
        display: flex;
        justify-content: flex-end;
        align-items: center;
        margin-bottom: 1.5rem;
    }

    .sort-options label {
        color: #4b5563;
        font-weight: 600;
        margin-right: 0.8rem;
        font-size: 0.9rem;
    }

    .sort-select {
        padding: 0.6rem 1.2rem;
        border: 2px solid #e5e7eb;
        border-radius: 10px;
        background: #ffffff;
        color: #1f2937;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
        min-width: 160px;
    }

    .sort-select:focus {
        outline: none;
        border-color:  #dc2626;
        box-shadow: 0 0 0 3px rgba(249, 115, 22, 0.2);
    }

    .products-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
        gap: 0.6rem;
    }

    .product-card {
        background: #ffffff;
        border-radius: 6px;
        padding: 0.6rem;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08);
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
        border: 1px solid #f1f5f9;
    }

    .product-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 3px 10px rgba(0, 0, 0, 0.12);
    }

    .product-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 2px;
        background: linear-gradient(135deg, #dc2626 0%, #991b1b 100%);
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .product-card:hover::before {
        opacity: 1;
    }

    .product-image-container {
        position: relative;
        background: #ffffff;
        border-radius: 5px;
        padding: 0.6rem;
        margin-bottom: 0.6rem;
        overflow: hidden;
    }

    .product-image {
        width: 100%;
        height: 100px;
        object-fit: contain;
        transition: transform 0.3s ease;
    }

    .product-card:hover .product-image {
        transform: scale(1.03);
    }

    .discount-badge {
        position: absolute;
        top: 0.3rem;
        left: 0.3rem;
        background: linear-gradient(135deg, #dc2626 0%, #991b1b 100%);
        color: white;
        padding: 0.15rem 0.5rem;
        border-radius: 6px;
        font-size: 0.65rem;
        font-weight: 700;
        box-shadow: 0 1px 3px rgba(249, 115, 22, 0.3);
    }

    .action-buttons {
        position: absolute;
        top: 0.3rem;
        right: 0.3rem;
        display: flex;
        flex-direction: column;
        gap: 0.15rem;
        opacity: 0;
        transform: translateX(2px);
        transition: all 0.3s ease;
    }

    .product-card:hover .action-buttons {
        opacity: 1;
        transform: translateX(0);
    }

    .action-button {
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(8px);
        border: none;
        width: 24px;
        height: 24px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.3s ease;
        font-size: 0.7rem;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08);
    }

    .action-button:hover {
        background: #dc2626;
        color: white;
        transform: scale(1.08);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.12);
    }

    .product-info {
        margin-bottom: 0.6rem;
    }

    .product-title {
        font-size: 0.85rem;
        font-weight: 600;
        color: #1a1a1a;
        margin: 0 0 0.5rem 0;
        line-height: 1.2;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .product-card:hover .product-title {
        color:  #dc2626;
    }

    .price-container {
        display: flex;
        align-items: center;
        gap: 0.25rem;
        margin-bottom: 0.5rem;
        flex-wrap: wrap;
    }

    .currency {
        font-size: 0.85rem;
        font-weight: 600;
        color: #1f2937;
    }

    .price-whole {
        font-size: 1rem;
        font-weight: 700;
        color: #1f2937;
    }

    .list-price {
        font-size: 0.7rem;
        color: #6b7280;
    }

    .strike {
        text-decoration: line-through;
        color: #9ca3af;
    }

    .rating-container {
        display: flex;
        align-items: center;
        gap: 0.3rem;
        margin-bottom: 0.5rem;
    }

    .stars {
        position: relative;
        display: inline-block;
        width: 70px;
        height: 14px;
        background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23e2e8f0' viewBox='0 0 24 24'%3E%3Cpath d='M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z'/%3E%3C/svg%3E") repeat-x;
        background-size: 14px 14px;
    }

    .stars-filled {
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23f59e0b' viewBox='0 0 24 24'%3E%3Cpath d='M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z'/%3E%3C/svg%3E") repeat-x;
        background-size: 14px 14px;
        transition: width 0.3s ease;
    }

    .rating-count {
        font-size: 0.7rem;
        color: #6b7280;
        font-weight: 500;
    }

    .delivery-info {
        display: flex;
        align-items: center;
        gap: 0.25rem;
        background: #ffffff;
        padding: 0.3rem 0.5rem;
        border-radius: 5px;
        margin-bottom: 0.6rem;
        font-size: 0.65rem;
        color: #dc2626;
        font-weight: 500;
    }

    .delivery-icon {
        width: 12px;
        height: 12px;
        fill: #dc2626;
    }

    .delivery-date {
        font-weight: 600;
        color:  #dc2626;
    }

    .add-to-cart-button {
        width: 100%;
        background: linear-gradient(135deg, #dc2626 0%, #991b1b 100%);
        color: white;
        border: none;
        padding: 0.5rem 0.7rem;
        border-radius: 5px;
        font-size: 0.75rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
        box-shadow: 0 2px 6px rgba(249, 115, 22, 0.3);
    }

    .add-to-cart-button:hover {
        background: linear-gradient(135deg, #dc2626 0%, #991b1b 100%);
        transform: translateY(-1px);
        box-shadow: 0 3px 10px rgba(249, 115, 22, 0.4);
    }

    .add-to-cart-button:active {
        transform: translateY(0);
        box-shadow: 0 2px 6px rgba(249, 115, 22, 0.3);
    }

    .add-to-cart-button.clicked {
        background: #22c55e;
        cursor: not-allowed;
    }

    .logout-button {
        background: linear-gradient(135deg, #dc2626 0%, #991b1b 100%);
        color: white;
        padding: 0.5rem 1rem;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 0.9rem;
        transition: all 0.3s ease;
    }

    .logout-button:hover {
        background: linear-gradient(135deg, #dc2626 0%, #991b1b 100%);
        transform: translateY(-1px);
    }

    footer {
        background: #1f2937;
        color: #e5e7eb;
        padding: 2rem 5%;
        margin-top: 3rem;
        position: relative;
    }

    .footer-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
        gap: 1.5rem;
    }

    footer h3 {
        font-size: 1.1rem;
        margin-bottom: 0.8rem;
        color:  #dc2626;
        font-weight: 700;
    }

    footer p {
        color: #9ca3af;
        font-size: 0.85rem;
        margin-bottom: 0.6rem;
    }

    footer input[type="email"] {
        width: 100%;
        padding: 0.6rem;
        border: none;
        border-radius: 20px;
        margin-top: 0.4rem;
        background: #374151;
        color: #e5e7eb;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
        .products-section {
            padding: 1.5rem 3%;
        }

        .sort-options {
            flex-direction: column;
            gap: 0.8rem;
            align-items: stretch;
        }

        .products-grid {
            grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
            gap: 0.8rem;
        }

        .section-header h1 {
            font-size: 1.4rem;
        }

        .search-bar {
            width: 100%;
        }

        .search-bar:focus {
            width: 100%;
        }

        .action-buttons {
            opacity: 1;
            transform: translateX(0);
        }
    }

    @media (max-width: 480px) {
        .products-grid {
            grid-template-columns: 1fr;
        }

        .nav-links {
            flex-direction: column;
            gap: 0.8rem;
        }

        .logout-button {
            font-size: 0.8rem;
            padding: 0.4rem 0.8rem;
        }
    }
</style>

<section class="products-section">
    <div class="section-header">
        <p>Our Products</p>
        <h1>Explore Our Mobile Products</h1>
    </div>

    <div class="sort-options">
        <div>
            <label for="sort-select"><i class="fas fa-sort-amount-down"></i> Sort By:</label>
            <select id="sort-select" class="sort-select">
                <option value="a-z" <%= sort === 'a-z' ? 'selected' : '' %>>A-Z</option>
                <option value="z-a" <%= sort === 'z-a' ? 'selected' : '' %>>Z-A</option>
                <option value="low-to-high" <%= sort === 'low-to-high' ? 'selected' : '' %>>Price: Low to High</option>
                <option value="high-to-low" <%= sort === 'high-to-low' ? 'selected' : '' %>>Price: High to Low</option>
            </select>
        </div>
    </div>

    <div class="products-grid">
        <% product.forEach(product => { %>
            <div class="product-card">
                <div class="product-image-container">
                    <img src="/Uploads/<%= product.productImage[0] %>" alt="<%= product.productName %>" class="product-image">
                    <span class="discount-badge">-40%</span>
                    <div class="action-buttons">
                        <button class="action-button add-to-wishlist" data-product-id="<%= product._id %>">♡</button>
                        <button class="action-button view-details" data-product-id="<%= product._id %>">👁</button>
                    </div>
                </div>
                <a href="/product/<%= product._id %>" class="product-link" aria-label="View details for <%= product.productName %>">
                    <div class="product-info">
                        <h3 class="product-title"><%= product.productName %></h3>
                        <div class="price-container">
                            <span class="currency">₹</span>
                            <span class="price-whole"><%= Math.floor(product.salePrice) %></span>
                            <% if (product.salePrice < product.regularPrice) { %>
                                <span class="list-price">List Price: <span class="strike">₹<%= product.regularPrice %></span></span>
                            <% } %>
                        </div>
                        <div class="rating-container">
                            <div class="stars">
                                <div class="stars-filled" style="width: <%= (product.rating || 4.5) * 20 %>%"></div>
                            </div>
                            <span class="rating-count"><%= product.reviewCount || 88 %></span>
                        </div>
                    </div>
                </a>
                <div class="delivery-info">
                    <svg class="delivery-icon" viewBox="0 0 24 24">
                        <path d="M20 8h-3V4H3c-1.1 0-2 .9-2 2v11h2c0 1.66 1.34 3 3 3s3-1.34 3-3h6c0 1.66 1.34 3 3 3s3-1.34 3-3h2v-5l-3-4zM6 18.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm13.5-9l1.96 2.5H17V9.5h2.5zm-1.5 9c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"/>
                    </svg>
                    FREE delivery by <span class="delivery-date">Tomorrow</span>
                </div>
                <input type="hidden" name="quantity" id="quantity-input" value="1">
                <button class="add-to-cart-button" data-product-id="<%= product._id %>" aria-label="Add <%= product.productName %> to cart">
                    Add to Cart
                </button>
            </div>
        <% }) %>
    </div>
</section>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.0/dist/sweetalert2.all.min.js"></script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

<script>
document.addEventListener('DOMContentLoaded', function () {
    let currentPage = 1;
    const limit = 10;
    const productsGrid = document.querySelector('.products-grid');
    const loadingIndicator = document.getElementById('loading');
    let isLoading = false;

    async function fetchProducts() {
        if (isLoading) return;
        isLoading = true;
        if (loadingIndicator) loadingIndicator.style.display = 'block';

        try {
            const response = await fetch(`/products?page=${currentPage}&limit=${limit}`);
            const data = await response.json();

            if (data.success) {
                let count = 0;
                data.products.forEach(product => {
                    if (count < 4) {
                        const productCard = `
                            <div class="product-card">
                                <div class="product-image-container">
                                    <img src="/Uploads/${product.productImage[0]}" alt="${product.productName}" class="product-image">
                                    <span class="discount-badge">-40%</span>
                                    <div class="action-buttons">
                                        <button class="action-button add-to-wishlist" data-product-id="${product._id}">♡</button>
                                        <button class="action-button view-details" data-product-id="${product._id}">👁</button>
                                    </div>
                                </div>
                                <a href="/product/${product._id}" class="product-link" aria-label="View details for ${product.productName}">
                                    <div class="product-info">
                                        <h3 class="product-title">${product.productName}</h3>
                                        <div class="price-container">
                                            <span class="currency">₹</span>
                                            <span class="price-whole">${Math.floor(product.salePrice)}</span>
                                            ${product.salePrice < product.regularPrice ? `<span class="list-price">List Price: <span class="strike">₹${product.regularPrice}</span></span>` : ''}
                                        </div>
                                        <div class="rating-container">
                                            <div class="stars">
                                                <div class="stars-filled" style="width: ${(product.rating || 4.5) * 20}%"></div>
                                            </div>
                                            <span class="rating-count">${product.reviewCount || 88}</span>
                                        </div>
                                    </div>
                                </a>
                                <div class="delivery-info">
                                    <svg class="delivery-icon" viewBox="0 0 24 24">
                                        <path d="M20 8h-3V4H3c-1.1 0-2 .9-2 2v11h2c0 1.66 1.34 3 3 3s3-1.34 3-3h6c0 1.66 1.34 3 3 3s3-1.34 3-3h2v-5l-3-4zM6 18.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm13.5-9l1.96 2.5H17V9.5h2.5zm-1.5 9c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"/>
                                    </svg>
                                    FREE delivery by <span class="delivery-date">Tomorrow</span>
                                </div>
                                <input type="hidden" name="quantity" id="quantity-input" value="1">
                                <button class="add-to-cart-button" data-product-id="${product._id}" aria-label="Add ${product.productName} to cart">
                                    Add to Cart
                                </button>
                            </div>
                        `;
                        if (productsGrid) productsGrid.insertAdjacentHTML('beforeend', productCard);
                        count++;
                    }
                });

                if (!data.hasMore) {
                    window.removeEventListener('scroll', handleScroll);
                }
            }
        } catch (error) {
            console.error('Error fetching products:', error);
        } finally {
            isLoading = false;
            if (loadingIndicator) loadingIndicator.style.display = 'none';
        }
    }

    function handleScroll() {
        const { scrollTop, scrollHeight, clientHeight } = document.documentElement;
        if (scrollTop + clientHeight >= scrollHeight - 50 && !isLoading) {
            currentPage++;
            fetchProducts();
        }
    }

    if (productsGrid && productsGrid.children.length === 0) {
        fetchProducts();
    }

    window.addEventListener('scroll', handleScroll);
});

document.addEventListener("DOMContentLoaded", () => {
    const addToCartButtons = document.querySelectorAll(".add-to-cart-button");

    addToCartButtons.forEach(button => {
        button.addEventListener("click", async event => {
            const productId = button.getAttribute("data-product-id");

            if (button.classList.contains("clicked")) {
                Swal.fire({
                    title: "Already Added!",
                    text: "This product is already in your cart.",
                    icon: "info",
                    showConfirmButton: false,
                    timer: 1500
                });
                return;
            }

            button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Adding...';
            button.disabled = true;

            try {
                const response = await fetch(`/addToCarts/${productId}`, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ quantity: 1 }),
                });

                const result = await response.json();

                if (response.ok) {
                    Swal.fire({
                        title: "Added to Cart!",
                        text: "The product has been successfully added to your cart.",
                        icon: "success",
                        showConfirmButton: false,
                        timer: 1500
                    });

                    button.classList.add("clicked");
                    button.innerHTML = '<i class="fas fa-check"></i> Added';
                } else {
                    Swal.fire({
                        title: "Failed to Add to Cart",
                        text: result.message || "An error occurred while adding the product to your cart.",
                        icon: "error",
                        showConfirmButton: false,
                        timer: 1500
                    });
                    button.innerHTML = 'Add to Cart';
                    button.disabled = false;
                }
            } catch (error) {
                Swal.fire({
                    title: "Error",
                    text: "An unexpected error occurred. Please try again later.",
                    icon: "error",
                    showConfirmButton: false,
                    timer: 1500
                });
                button.innerHTML = 'Add to Cart';
                button.disabled = false;
                console.error("Error:", error);
            }
        });
    });
});

document.addEventListener('DOMContentLoaded', function () {
    const addToWishlistButtons = document.querySelectorAll('.add-to-wishlist');

    addToWishlistButtons.forEach(button => {
        button.addEventListener('click', function (e) {
            e.preventDefault();
            e.stopPropagation();
            const productId = this.getAttribute('data-product-id');
            const icon = this;

            icon.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';

            fetch('/addToWishlist', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ productId: productId }),
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        icon.textContent = '♥';
                        Swal.fire({
                            icon: 'success',
                            title: 'Product added to wishlist!',
                            showConfirmButton: false,
                            timer: 1500
                        });
                    } else if (data.alreadyExists) {
                        icon.textContent = '♥';
                        Swal.fire({
                            icon: 'info',
                            title: 'Product is already in your wishlist!',
                            showConfirmButton: false,
                            timer: 1500
                        });
                    } else if (data.outOfStock) {
                        icon.textContent = '♡';
                        Swal.fire({
                            icon: 'warning',
                            title: 'Product is out of stock!',
                            showConfirmButton: false,
                            timer: 1500
                        });
                    } else {
                        icon.textContent = '♡';
                        Swal.fire({
                            icon: 'error',
                            title: 'An error occurred while adding to the wishlist.',
                            showConfirmButton: false,
                            timer: 1500
                        });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    icon.textContent = '♡';
                    Swal.fire({
                        icon: 'error',
                        title: 'An error occurred while adding to the wishlist.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                });
        });
    });
});

document.getElementById('sort-select').addEventListener('change', function () {
    const currentUrl = new URL(window.location.href);
    const params = new URLSearchParams(currentUrl.search);
    params.set('sort', this.value);
    if (!params.has('page')) params.set('page', '1');
    if (!params.has('query')) params.set('query', '');
    window.location.href = `${currentUrl.pathname}?${params.toString()}`;
});
</script>

<%- include('../user/layout/userFooter') %>